// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id       String     @id @default(uuid())
  name     String
  email    String     @unique
  password String
  token    String?
  address  String?
  isSeller Boolean    @default(false)
  Cart     Cart[]
  Rating   Rating[]
  Wishlist Wishlist[]
  Order    Order[]
  Product  Product[]
}

model Product {
  id            String          @id @default(uuid())
  name          String
  count         Int             @default(0)
  price         Int             @default(0)
  desc          String?
  CartToProduct CartToProduct[]
  ProductColor  ProductColor[]
  ProductSpecs  ProductSpecs[]
  Rating        Rating[]
  Wishlist      Wishlist[]
  type          type?           @relation(fields: [typeId], references: [id])
  typeId        String?
  Customer      Customer?       @relation(fields: [customerId], references: [id])
  customerId    String?
}

model type {
  id      String    @id @default(uuid())
  name    String
  Product Product[]
}

model Cart {
  cart_id       String          @id @default(uuid())
  customer_id   String          @unique
  Customer      Customer        @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  CartToProduct CartToProduct[]
}

model CartToProduct {
  cart_id    String
  product_id String
  itemcount  Int     @default(1)
  Cart       Cart    @relation(fields: [cart_id], references: [cart_id], onDelete: Cascade)
  Product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([cart_id, product_id])
}

model ProductColor {
  product_id String
  color      String
  item_count Int     @default(0)
  imageuri   String?

  Product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([color, product_id])
}

model ProductSpecs {
  product_id  String
  specs       String
  price       Int?   @default(0)
  items_count Int    @default(0)

  Product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([specs, product_id])
}

model Rating {
  customer_id String
  id          String
  rating      Int
  review      String?
  Customer    Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  Product     Product  @relation(fields: [id], references: [id], onDelete: Cascade)

  @@id([id, customer_id])
}

model Wishlist {
  customer_id String   @unique
  product_id  String
  Customer    Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  Product     Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([customer_id, product_id])
}

model Order {
  order_id   String   @id
  product_id String[]
  address    String
  time       DateTime @default(now())

  Customer Customer @relation(fields: [order_id], references: [id], onDelete: Cascade)
}
